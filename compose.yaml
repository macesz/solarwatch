services:
  db:
      image: 'postgres:17.4-alpine3.21'
      container_name: db
      environment:
        - POSTGRES_USER=${SPRING_DATASOURCE_USERNAME}
        - POSTGRES_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
        - POSTGRES_DB=solarwatch
      volumes:
        - sw_postgres_data:/var/lib/postgresql/data
      networks:
        - sw_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      - db
    environment:
    - spring.datasource.url=${DB_URL}
    - spring.datasource.username=${DB_USERNAME}
    - spring.datasource.password=${DB_PASSWORD}
    - SECRET_KEY=${SECRET_KEY}
    - EXPIRATION=${EXPIRATION}
    networks:
      - sw_network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:  
    - "3000:80"
    depends_on:
      - backend
    networks:
      - sw_network
    
volumes:
  sw_postgres_data:

networks:
  sw_network:
